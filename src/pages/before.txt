import React, { useState } from 'react'
import { Link } from 'react-router-dom'
import axios from 'axios'

export default function Form() {
  const [writer , setWriter] = useState("")
  const [title , setTitle] = useState("")
  const [text , setText] = useState("")
  const onChange = (e) => {
    const {name} = e.target
    if(name === 'writer') {
      setWriter(e.target.value)
    } else if(name === 'title') {
      setTitle(e.target.value)
    } else if (name === 'text') {
      setText(e.target.value)
    }
  }
  const onSubmit = (e) => {
    e.preventDefault();
    const body = {
      writer,
      title,
      text
    }
    console.log(body);
    setWriter('')
    setTitle('')
    setText('')
    axios
      .post("http://localhost:4000/posts", body)
      .then((res) => console.log(res));
  }
  return (
    <>
      <Link to={'/'}>뒤로가기</Link>
    <form onSubmit={onSubmit}>
      <label>작성자 : </label>
      <input onChange={onChange} name="writer" type={'text'} placeholder="작성자" value={writer}/>
      <label>title : </label>
      <input onChange={onChange} name="title" type={'text'} placeholder="title" value={title}/>
      <label>내용</label>
      <textarea onChange={onChange} name='text' value={text}></textarea>
      <button type='submit'>제출</button>
    </form>
    </>
  )
}


  // 수정함수
  const onUpdateButtonClickHandler = async () => {
    const updatedWeather = {
      id: targetId,
      title: titles,
      content: contents,
    };

    await api.patch(`/weathers/${targetId}`, updatedWeather);

    setWeathers((prevWeathers) =>
      prevWeathers.map((item) =>
        item.id === targetId ? { ...item, title: titles, content: contents } : item
      )
    );

    // 입력 필드 초기화
    setTargetId('');
    setTitles('');
    setContents('');
  };


  <div>
            <input
              type="text"
              placeholder="수정할 아이디"
              value={targetId}
              onChange={(e) => setTargetId(e.target.value)}
            />
            <input
              type="text"
              placeholder="수정할 제목"
              value={titles}
              onChange={(e) => setTitles(e.target.value)}
            />
            <input
              type="text"
              placeholder="수정할 내용"
              value={contents}
              onChange={(e) => setContents(e.target.value)}
            />
            <button onClick={onUpdateButtonClickHandler}>수정</button>
            <br />
            <br />
          </div>

          import React, { useEffect, useState } from 'react';
import api from '../axios/api';

function Edit() {
  const [targetId, setTargetId] = useState('');
  const [weathers, setWeathers] = useState([]);
  const [titles, setTitles] = useState('');
  const [contents, setContents] = useState('');

  // 조회함수
  const fetchWeathers = async () => {
    const { data } = await api.get('/weathers');
    console.log('data', data);
    setWeathers(data);
  };

  useEffect(() => {
    // db로부터 값을 가져올 것이다.
    fetchWeathers();
  }, []);



  return (
    <div>
      <input
        type="text"
        placeholder="수정할 아이디"
        value={targetId}
        onChange={(e) => setTargetId(e.target.value)}
      />
      <input
        type="text"
        placeholder="수정할 제목"
        value={titles}
        onChange={(e) => setTitles(e.target.value)}
      />
      <input
        type="text"
        placeholder="수정할 내용"
        value={contents}
        onChange={(e) => setContents(e.target.value)}
      />
      <button onClick={onUpdateButtonClickHandler}>수정</button>
      <br />
      <br />
    </div>
  );
}

export default Edit;


  <ul
   onClick={() => {
   setView(!view);
   }}
   >
 : {view ? '⌃' : '⌄'}
     {view && <Dropdown onDeleteButtonClickHandler={onDeleteButtonClickHandler} id={item.id}/>}
     </ul>



                 <input
              type="text"
              placeholder="추가할 아이디"
              value={targetId}
              onChange={(e) => setTargetId(e.target.value)}
            />

             <div>
            {weathers.map((item) => (
              <div key={item.id}>
                {item.createdBy}: {item.title} {item.content}&nbsp;
                <button onClick={() => onDeleteButtonClickHandler(item.id)}>
                  삭제
                </button>
              </div>
            ))}
          </div>



               <div>
            <input
              type="text"
              placeholder="수정할 아이디"
              value={targetId}
              onChange={(e) => setTargetId(e.target.value)}
            />
            <input
              type="text"
              placeholder="수정할 제목"
              value={titles}
              onChange={(e) => setTitles(e.target.value)}
            />
            <input
              type="text"
              placeholder="수정할 내용"
              value={contents}
              onChange={(e) => setContents(e.target.value)}
            />
             <input
              type="text"
              placeholder="작성자"
              value={createdBy}
              onChange={(e) => setCreatedBy(e.target.value)}
            />
            <button onClick={onUpdateButtonClickHandler}>수정</button>
            <br />
            <br />
          </div>



           // 조회함수
  const fetchWeathers = async () => {
    const { data } = await api.get('/weathers');
    console.log('data', data);
    setItem(data);
  };

  useEffect(() => {
    // db로부터 값을 가져올 것이다.
    fetchWeathers();
  }, []);

  // 추가함수
  const onSubmitHandler = async (e) => {
    e.preventDefault();

    const newWeather = {
      id: targetId,
      createdBy: createdBy,
      title: newTitle,
      content: newContent,
    };

    await api.post('/weathers', newWeather);
    setWeathers([...weathers, newWeather]);

    // 입력 필드 초기화
    setTargetId('');
    setCreatedBy('');
    setNewTitle('');
    setNewContent('');
    navigate('/WeatherTalkGroup');

  };